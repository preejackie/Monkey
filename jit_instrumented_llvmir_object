
NativeCode.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_Z1hv>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
   b:	00 00 00 
   e:	48 8b 08             	mov    (%rax),%rcx
  11:	48 83 c1 01          	add    $0x1,%rcx
  15:	48 89 08             	mov    %rcx,(%rax)
  18:	5d                   	pop    %rbp
  19:	c3                   	retq   
  1a:	90                   	nop
  1b:	90                   	nop
  1c:	90                   	nop
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop

0000000000000020 <main>:
  20:	55                   	push   %rbp
  21:	48 89 e5             	mov    %rsp,%rbp
  24:	48 83 ec 20          	sub    $0x20,%rsp
  28:	31 c0                	xor    %eax,%eax
  2a:	89 c1                	mov    %eax,%ecx
  2c:	48 ba 00 00 00 00 00 	movabs $0x0,%rdx
  33:	00 00 00 
  36:	48 8b 72 08          	mov    0x8(%rdx),%rsi
  3a:	48 83 c6 01          	add    $0x1,%rsi
  3e:	48 89 72 08          	mov    %rsi,0x8(%rdx)
  42:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  49:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  50:	48 89 4d f0          	mov    %rcx,-0x10(%rbp)
  54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  58:	83 7d f8 64          	cmpl   $0x64,-0x8(%rbp)
  5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  60:	7d 23                	jge    85 <main+0x65>
  62:	48 b8 00 00 00 00 00 	movabs $0x0,%rax
  69:	00 00 00 
  6c:	ff d0                	callq  *%rax
  6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  72:	48 83 c0 01          	add    $0x1,%rax
  76:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  79:	83 c1 01             	add    $0x1,%ecx
  7c:	89 4d f8             	mov    %ecx,-0x8(%rbp)
  7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  83:	eb cf                	jmp    54 <main+0x34>
  85:	31 c0                	xor    %eax,%eax
  87:	48 b9 00 00 00 00 00 	movabs $0x0,%rcx
  8e:	00 00 00 
  91:	48 8b 11             	mov    (%rcx),%rdx
  94:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  98:	48 01 f2             	add    %rsi,%rdx
  9b:	48 89 11             	mov    %rdx,(%rcx)
  9e:	48 83 c4 20          	add    $0x20,%rsp
  a2:	5d                   	pop    %rbp
  a3:	c3                   	retq   
